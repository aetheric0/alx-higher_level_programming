The module ``3-say_my_name``
==========================

Usage:
-----

Import function from module ``3-say_my_name``:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Passing non-empty strings to both parameters:
    >>> say_my_name("John", "Smith")
    My name is John Smith

Passing empty string as first_name and non-empty string as last_name:
    >>> say_my_name("", "Smith")
    My name is  Smith

Passing non-empty string as first_name and empty string as last_name:
    >>> say_my_name("John", "")
    My name is John 

Passing a string and None as arguments:
    >>> say_my_name("John", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Passing a string and None as arguments:
    >>> say_my_name(None, "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string


Other Datatypes Asides String
-----------------------------

Passing an integer for first_name and a string as last_name:
    >>> say_my_name(3, "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Passing a string for first_name and a float as last_name:
    >>> say_my_name("John", 4.5)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Passing an undefined variables as arguments:
    >>> say_my_name(John, Smith)
    Traceback (most recent call last):
    ...
    NameError: name 'John' is not defined

Passing a list as first_name and a string as last_name:
    >>> say_my_name(["John"], "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Passing a Boolean and a string as arguments:
    >>> say_my_name(True, "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Passing a string and a dict as arguments:
    >>> say_my_name("John", {"3" : "Catherine"})
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string
